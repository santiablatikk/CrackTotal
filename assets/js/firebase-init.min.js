import{initializeApp,getApps,getApp}from"https://www.gstatic.com/firebasejs/10.12.2/firebase-app.js";import{getFirestore}from"https://www.gstatic.com/firebasejs/10.12.2/firebase-firestore.js";import{getAuth,signInAnonymously,onAuthStateChanged}from"https://www.gstatic.com/firebasejs/10.12.2/firebase-auth.js";import{getFirebaseConfig}from"./firebase-config.js";let app,db,auth,dbInstance=null,authInstance=null,firebaseUser=null,isFirebaseInitializing=!1,firebaseInitializationPromise=null;async function initializeFirebase(){return isFirebaseInitializing||(isFirebaseInitializing=!0,firebaseInitializationPromise=(async()=>{try{const e=await getFirebaseConfig();if(!e||!e.apiKey)throw console.error("❌ Configuración de Firebase inválida o no cargada desde firebase-config.js"),new Error("Configuración de Firebase inválida");return console.log("🔥 Inicializando Firebase con la configuración obtenida..."),app=getApps().length?getApp():initializeApp(e),dbInstance=getFirestore(app),authInstance=getAuth(app),console.log("✅ Firebase App inicializada correctamente."),console.log("📋 Project ID:",app.options.projectId),new Promise(((e,r)=>{onAuthStateChanged(authInstance,(r=>{r?(firebaseUser=r,console.log("👤 Usuario autenticado:",r.isAnonymous?"Anónimo":r.uid),e({app:app,db:dbInstance,auth:authInstance,user:firebaseUser})):(console.log("🔑 No hay usuario. Intentando autenticación anónima..."),signInAnonymously(authInstance).then((r=>{firebaseUser=r.user,console.log("👤 Usuario anónimo autenticado:",firebaseUser.uid),e({app:app,db:dbInstance,auth:authInstance,user:firebaseUser})})).catch((r=>{console.error("❌ Error en autenticación anónima:",r),console.warn("⚠️ Funcionando en modo solo lectura debido a error de autenticación"),firebaseUser={uid:"guest_"+Date.now(),isAnonymous:!0,displayName:"Invitado",readOnly:!0},e({app:app,db:dbInstance,auth:authInstance,user:firebaseUser,readOnly:!0})})))}),(r=>{console.error("❌ Error en onAuthStateChanged:",r),console.warn("⚠️ Funcionando en modo solo lectura debido a error en observador de autenticación"),firebaseUser={uid:"guest_"+Date.now(),isAnonymous:!0,displayName:"Invitado",readOnly:!0},e({app:app,db:dbInstance,auth:authInstance,user:firebaseUser,readOnly:!0})}))}))}catch(e){console.error("❌ Error CRÍTICO inicializando Firebase en firebase-init.js:",e),window.dispatchEvent(new CustomEvent("firebaseError",{detail:e})),console.warn("⚠️ Inicializando Firebase en modo de emergencia (datos de demostración)");return{app:null,db:createMockFirestore(),auth:{currentUser:{uid:"mock_user",isAnonymous:!0}},user:{uid:"mock_user",isAnonymous:!0,displayName:"Usuario Demo"},isMock:!0}}})()),firebaseInitializationPromise}function createMockFirestore(){return{collection:e=>({doc:e=>({get:()=>Promise.resolve({exists:!1,data:()=>null}),set:()=>Promise.resolve(),update:()=>Promise.resolve()}),where:()=>({orderBy:()=>({limit:()=>({get:()=>Promise.resolve({docs:getMockDocuments(e)})})})}),orderBy:()=>({limit:()=>({get:()=>Promise.resolve({docs:getMockDocuments(e)})})})})}}function getMockDocuments(e){return({users:[{id:"mock1",displayName:"Demo User 1",score:1200,wins:5,losses:2},{id:"mock2",displayName:"Demo User 2",score:950,wins:3,losses:1}],rankings:[{id:"rank1",userId:"mock1",displayName:"Demo User 1",score:1200,gameType:"pasalache"},{id:"rank2",userId:"mock2",displayName:"Demo User 2",score:950,gameType:"pasalache"}],matches:[{id:"match1",userId:"mock1",playerName:"Demo User 1",score:300,result:"victory"},{id:"match2",userId:"mock2",playerName:"Demo User 2",score:250,result:"defeat"}]}[e]||[]).map((e=>({id:e.id,data:()=>e})))}export const ensureFirebaseInitialized=async()=>authInstance&&dbInstance?Promise.resolve({app:app,db:dbInstance,auth:authInstance,user:firebaseUser}):initializeFirebase();ensureFirebaseInitialized().then((e=>{db=e.db,auth=e.auth,console.log("Firebase db y auth disponibles para exportación directa (después de promesa)."),window.dispatchEvent(new CustomEvent("firebaseReady",{detail:{db:db,auth:auth,user:e.user}}))})).catch((e=>{console.error("Error finalizando la inicialización de Firebase para exportación directa:",e),window.dispatchEvent(new CustomEvent("firebaseError",{detail:e}))}));export{db,auth};export function isFirebaseAvailable(){return null!==dbInstance&&null!==authInstance&&null!==firebaseUser}export function isUserAuthenticated(){return null!==firebaseUser}export function getCurrentUser(){return firebaseUser}export async function safeFirestoreOperation(e,r=null){if(!isFirebaseAvailable())return console.warn("🔥 Firebase no disponible, saltando operación"),r&&r(),null;try{return await e()}catch(e){return console.error("🚫 Error en operación de Firestore:",e.code,e.message),"permission-denied"===e.code?(console.error("🚫 FIRESTORE: Permisos insuficientes. Posibles soluciones:"),console.error("   1. Habilitar autenticación anónima en Firebase Console"),console.error("   2. Ajustar reglas de seguridad de Firestore"),console.error("   3. Verificar configuración del proyecto")):"unavailable"===e.code?console.error("🌐 FIRESTORE: Servicio no disponible. Verifica conectividad"):"deadline-exceeded"===e.code?console.error("⏱️ FIRESTORE: Timeout en la operación. Conexión lenta"):"failed-precondition"===e.code&&console.error("⚙️ FIRESTORE: Reglas de seguridad muy restrictivas"),r&&r(),null}}"undefined"!=typeof window&&(window.isFirebaseAvailable=isFirebaseAvailable,window.isUserAuthenticated=isUserAuthenticated,window.getCurrentUser=getCurrentUser,window.safeFirestoreOperation=safeFirestoreOperation);