#!/usr/bin/env python3
"""
Servidor HTTP S√öPER SIN CACH√â para desarrollo
Soluciona TODOS los problemas de cach√© del navegador
"""
import http.server
import socketserver
import os
import sys
import time
from urllib.parse import unquote, urlparse, parse_qs

class SuperNoCacheHTTPRequestHandler(http.server.SimpleHTTPRequestHandler):
    def end_headers(self):
        # Headers EXTREMOS anti-cach√©
        timestamp = str(int(time.time()))
        
        # M√∫ltiples headers anti-cach√©
        self.send_header('Cache-Control', 'no-cache, no-store, must-revalidate, max-age=0, s-maxage=0')
        self.send_header('Pragma', 'no-cache')
        self.send_header('Expires', 'Thu, 01 Jan 1970 00:00:00 GMT')
        self.send_header('Last-Modified', 'Thu, 01 Jan 1970 00:00:00 GMT')
        
        # Headers adicionales anti-cach√©
        self.send_header('X-Accel-Expires', '0')
        self.send_header('Surrogate-Control', 'no-store')
        self.send_header('Clear-Site-Data', '"cache", "storage"')
        
        # CORS completo
        self.send_header('Access-Control-Allow-Origin', '*')
        self.send_header('Access-Control-Allow-Methods', 'GET, POST, OPTIONS, HEAD')
        self.send_header('Access-Control-Allow-Headers', 'Content-Type, Authorization, X-Requested-With')
        self.send_header('Access-Control-Max-Age', '0')
        
        # Timestamp √∫nico para cada respuesta
        self.send_header('X-Timestamp', timestamp)
        self.send_header('X-Cache-Buster', f'nocache-{timestamp}')
        self.send_header('X-App-Version', f'DEV-{timestamp}')
        
        # Prevenir proxy cach√©
        self.send_header('Vary', '*')
        
        super().end_headers()
    
    def do_GET(self):
        """GET con logging mejorado y anti-cach√© extremo"""
        path = self.path
        timestamp = int(time.time())
        
        # Log detallado
        print(f"üîÑ [{timestamp}] GET: {path}")
        
        # Si es un archivo est√°tico, agregar timestamp
        if path.endswith(('.css', '.js', '.html')):
            print(f"üìÑ Archivo est√°tico detectado: {path}")
            
        # Llamar al m√©todo padre
        return super().do_GET()
    
    def do_OPTIONS(self):
        """Manejar preflight CORS"""
        self.send_response(200)
        self.end_headers()
    
    def log_message(self, format, *args):
        """Log personalizado con timestamp"""
        timestamp = time.strftime('%H:%M:%S')
        print(f"üåê [{timestamp}] {format % args}")

def run_server(port=8000):
    """Ejecutar servidor S√öPER sin cach√©"""
    try:
        # Cambiar al directorio del script
        script_dir = os.path.dirname(os.path.abspath(__file__))
        os.chdir(script_dir)
        
        print("=" * 60)
        print("üöÄ SERVIDOR S√öPER SIN CACH√â INICIADO")
        print("=" * 60)
        print(f"üìÇ Directorio: {script_dir}")
        print(f"üåê Puerto: {port}")
        print(f"üìç URLs:")
        print(f"   ‚Ä¢ http://localhost:{port}")
        print(f"   ‚Ä¢ http://127.0.0.1:{port}")
        print()
        print("üí° CARACTER√çSTICAS EXTREMAS:")
        print("   ‚úÖ Headers anti-cach√© m√∫ltiples")
        print("   ‚úÖ Timestamps √∫nicos por request")
        print("   ‚úÖ Clear-Site-Data autom√°tico")
        print("   ‚úÖ CORS completo habilitado")
        print("   ‚úÖ Logs detallados en tiempo real")
        print()
        print("üî• GARANT√çA: CERO CACH√â DEL NAVEGADOR")
        print()
        print("‚ö†Ô∏è  INSTRUCCIONES PARA EL NAVEGADOR:")
        print("   1. Abre DevTools (F12)")
        print("   2. Ve a Network ‚Üí ‚úÖ Disable cache")
        print("   3. Usa Ctrl+Shift+R (recarga forzada)")
        print()
        print("‚èπÔ∏è  Presiona Ctrl+C para detener")
        print("=" * 60)
        
        with socketserver.TCPServer(("", port), SuperNoCacheHTTPRequestHandler) as httpd:
            httpd.serve_forever()
            
    except KeyboardInterrupt:
        print("\n\nüõë Servidor detenido por el usuario")
        print("üìä ESTAD√çSTICAS:")
        print(f"   ‚Ä¢ Tiempo activo: {time.strftime('%H:%M:%S')}")
        print("   ‚Ä¢ Cache eliminado: ‚úÖ")
        
    except OSError as e:
        if "Address already in use" in str(e):
            print(f"\n‚ùå Puerto {port} ocupado.")
            print(f"üîÑ Intentando puerto {port + 1}...")
            run_server(port + 1)
        else:
            print(f"\n‚ùå Error: {e}")

if __name__ == "__main__":
    port = 8000
    if len(sys.argv) > 1:
        try:
            port = int(sys.argv[1])
        except ValueError:
            print("‚ùå Puerto debe ser un n√∫mero")
            sys.exit(1)
    
    run_server(port) 